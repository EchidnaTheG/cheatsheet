"use strict";(self.webpackChunkmy_cheatsheet=self.webpackChunkmy_cheatsheet||[]).push([[295],{1020:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Interfaces-In-Go","title":"Interfaces-In-Go","description":"\ud83e\udde0 What Are Interfaces?","source":"@site/docs/Interfaces-In-Go.md","sourceDirName":".","slug":"/Interfaces-In-Go","permalink":"/cheatsheet/docs/Interfaces-In-Go","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Interfaces-In-Go.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Errors, Panics, and Loops in Go","permalink":"/cheatsheet/docs/Errors, Panics, and Loops in Go"},"next":{"title":"Functions and Control Flow in Go","permalink":"/cheatsheet/docs/functions-and-flow"}}');var s=t(4848),r=t(8453);const a={},c=void 0,l={},o=[{value:"\ud83e\udde0 What Are Interfaces?",id:"-what-are-interfaces",level:2},{value:"\ud83e\udde9 Interface Example: Shapes",id:"-interface-example-shapes",level:2},{value:"\ud83d\udce4 Interface in Use",id:"-interface-in-use",level:2},{value:"\u2753 The Empty Interface: interface",id:"-the-empty-interface-interface",level:2},{value:"\ud83d\udccc Implicit Implementation",id:"-implicit-implementation",level:2},{value:"\u2705 Example Types",id:"-example-types",level:2},{value:"Implementing the interface:",id:"implementing-the-interface",level:4},{value:"\ud83d\udd0d Type Assertion",id:"-type-assertion",level:2},{value:"\ud83d\udd01 Better: Type Switch",id:"-better-type-switch",level:2},{value:"\ud83e\udde0 Key Design Tips",id:"-key-design-tips",level:2},{value:"Keep Interfaces Small",id:"keep-interfaces-small",level:3},{value:"Don\u2019t Tie Interfaces to Concrete Types",id:"dont-tie-interfaces-to-concrete-types",level:3},{value:"Interfaces Are Not Classes",id:"interfaces-are-not-classes",level:3},{value:"\ud83d\udea8 Naming Your Interface Methods",id:"-naming-your-interface-methods",level:2},{value:"\ud83e\uddea Example: Notification System",id:"-example-notification-system",level:2},{value:"Implementing the interface:",id:"implementing-the-interface-1",level:3},{value:"Type switch to process:",id:"type-switch-to-process",level:3},{value:"\ud83d\udce6 Example: Cargo &amp; Manifest",id:"-example-cargo--manifest",level:3},{value:"Methods:",id:"methods",level:3},{value:"Sending Decision:",id:"sending-decision",level:2},{value:"\u2705 Sample Main",id:"-sample-main",level:2},{value:"\u2705 Summary",id:"-summary",level:2},{value:"Interfaces are implicitly implemented",id:"interfaces-are-implicitly-implemented",level:3},{value:"Use type switches to extract underlying types",id:"use-type-switches-to-extract-underlying-types",level:3},{value:"Keep interfaces small and focused",id:"keep-interfaces-small-and-focused",level:3},{value:"Use clear method signatures",id:"use-clear-method-signatures",level:3},{value:"Interfaces are about behavior, not structure",id:"interfaces-are-about-behavior-not-structure",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-what-are-interfaces",children:"\ud83e\udde0 What Are Interfaces?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Interfaces define ",(0,s.jsx)(n.strong,{children:"behavior"}),", not structure."]}),"\n",(0,s.jsxs)(n.li,{children:["A type ",(0,s.jsx)(n.em,{children:"implements"})," an interface implicitly by defining all its required methods."]}),"\n",(0,s.jsxs)(n.li,{children:["Interfaces let you write ",(0,s.jsx)(n.strong,{children:"flexible"}),", ",(0,s.jsx)(n.strong,{children:"decoupled"}),", and ",(0,s.jsx)(n.strong,{children:"reusable"})," code."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-interface-example-shapes",children:"\ud83e\udde9 Interface Example: Shapes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type shape interface {\n  area() float64\n  perimeter() float64\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Types that match these method signatures implement the interface:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type rect struct {\n\twidth, height float64\n}\n\nfunc (r rect) area() float64 {\n\treturn r.width * r.height\n}\n\nfunc (r rect) perimeter() float64 {\n\treturn 2*r.width + 2*r.height\n}\n\n\n-------------------------------------------------------------------------------------------------\n\n\ntype circle struct {\n\tradius float64\n}\n\nfunc (c circle) area() float64 {\n\treturn math.Pi * c.radius * c.radius\n}\n\nfunc (c circle) perimeter() float64 {\n\treturn 2 * math.Pi * c.radius\n}\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-interface-in-use",children:"\ud83d\udce4 Interface in Use"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func printShapeData(s shape) {\n\tfmt.Printf("Area: %v - Perimeter: %v\\n", s.area(), s.perimeter())\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-the-empty-interface-interface",children:"\u2753 The Empty Interface: interface"}),"\n",(0,s.jsx)(n.p,{children:"Every type in Go satisfies the empty interface:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'var x interface{}\nx = 42\nx = "hello"\nx = struct{}{}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Use with caution \u2014 no behavior is enforced."}),"\n",(0,s.jsx)(n.h2,{id:"-implicit-implementation",children:"\ud83d\udccc Implicit Implementation"}),"\n",(0,s.jsx)(n.p,{children:"In Go:"}),"\n",(0,s.jsxs)(n.p,{children:["No ",(0,s.jsx)(n.code,{children:"implements"})," keyword"]}),"\n",(0,s.jsxs)(n.p,{children:["If a type defines all required methods, it ",(0,s.jsx)(n.em,{children:"automatically"})," implements the interface"]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"email"})," and ",(0,s.jsx)(n.code,{children:"sms"})," implement the ",(0,s.jsx)(n.code,{children:"expense"})," interface"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type expense interface {\ncost() float64\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-example-types",children:"\u2705 Example Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type email struct {\n\tisSubscribed bool\n\tbody         string\n\ttoAddress    string\n}\n\ntype sms struct {\n\tisSubscribed  bool\n\tbody          string\n\ttoPhoneNumber string\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"implementing-the-interface",children:"Implementing the interface:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func (e email) cost() float64 {\n\tif !e.isSubscribed {\n\t\treturn float64(len(e.body)) * 0.05\n\t}\n\treturn float64(len(e.body)) * 0.01\n}\n\nfunc (s sms) cost() float64 {\n\tif !s.isSubscribed {\n\t\treturn float64(len(s.body)) * 0.1\n\t}\n\treturn float64(len(s.body)) * 0.03\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once we do this, the structs have implemented the expense interface, no other keyword needed, its why ",(0,s.jsx)(n.em,{children:"everything"})," satisfies the empty interface, since no functions or methods are needed in order to implement it."]}),"\n",(0,s.jsx)(n.h2,{id:"-type-assertion",children:"\ud83d\udd0d Type Assertion"}),"\n",(0,s.jsx)(n.p,{children:"You can cast an interface to its concrete type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"em, ok := e.(email)\nif ok {\n\treturn em.toAddress, em.cost()\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-better-type-switch",children:"\ud83d\udd01 Better: Type Switch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func getExpenseReport(e expense) (string, float64) {\n\tswitch v := e.(type) {\n\tcase email:\n\t\treturn v.toAddress, v.cost()\n\tcase sms:\n\t\treturn v.toPhoneNumber, v.cost()\n\tdefault:\n\t\treturn "", 0.0\n\t}\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-key-design-tips",children:"\ud83e\udde0 Key Design Tips"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"keep-interfaces-small",children:"Keep Interfaces Small"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Define only what's absolutely needed \u2014 think behavior, not structure."}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"dont-tie-interfaces-to-concrete-types",children:"Don\u2019t Tie Interfaces to Concrete Types"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Let types come later. Interfaces describe what needs to be done, not who does it."}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"interfaces-are-not-classes",children:"Interfaces Are Not Classes"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"No fields, constructors, or inheritance \u2014 just behavior contracts."}),"\n",(0,s.jsx)(n.h2,{id:"-naming-your-interface-methods",children:"\ud83d\udea8 Naming Your Interface Methods"}),"\n",(0,s.jsx)(n.p,{children:"Bad:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Copier interface {\n\tCopy(string, string) int\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Good!:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Copier interface {\n\tCopy(sourceFile string, destinationFile string) (bytesCopied int)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-example-notification-system",children:"\ud83e\uddea Example: Notification System"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type notification interface {\n\timportance() int\n}\n\ntype directMessage struct {\n\tsenderUsername string\n\tmessageContent string\n\tpriorityLevel  int\n\tisUrgent       bool\n}\n\ntype groupMessage struct {\n\tgroupName      string\n\tmessageContent string\n\tpriorityLevel  int\n}\n\ntype systemAlert struct {\n\talertCode      string\n\tmessageContent string\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"implementing-the-interface-1",children:"Implementing the interface:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func (dm directMessage) importance() int {\n\tif dm.isUrgent {\n\t\treturn 50\n\t}\n\treturn dm.priorityLevel\n}\n\nfunc (gp groupMessage) importance() int {\n\treturn gp.priorityLevel\n}\n\nfunc (sy systemAlert) importance() int {\n\treturn 100\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"type-switch-to-process",children:"Type switch to process:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func processNotification(n notification) (string, int) {\n\tswitch v := n.(type) {\n\tcase directMessage:\n\t\treturn v.senderUsername, v.importance()\n\tcase groupMessage:\n\t\treturn v.groupName, v.importance()\n\tcase systemAlert:\n\t\treturn v.alertCode, v.importance()\n\tdefault:\n\t\treturn "", 0\n\t}\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"-example-cargo--manifest",children:"\ud83d\udce6 Example: Cargo & Manifest"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Cargo interface {\n\tmanifest() string\n}\n\nTypes:\n\ntype parcel struct {\n\tlocation    string\n\tweight      string\n\tisFlammable bool\n\tisDelicate  bool\n}\n\ntype container struct {\n\tlocation    string\n\tweight      string\n\tisFlammable bool\n\tisDelicate  bool\n\tsize        float64\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func (p parcel) manifest() string {\n\treturn fmt.Sprintf("Location: %v\\nWeight: %v\\nIsFlammable: %v\\nIsDelicate: %v", p.location, p.weight, p.isFlammable, p.isDelicate)\n}\n\nfunc (c container) manifest() string {\n\treturn fmt.Sprintf("Location: %v\\nWeight: %v\\nIsFlammable: %v\\nIsDelicate: %v\\nSize: %v", c.location, c.weight, c.isFlammable, c.isDelicate, c.size)\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"sending-decision",children:"Sending Decision:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func send(C Cargo, destination string) string {\n\tswitch v := C.(type) {\n\tcase parcel:\n\t\tif (v.isFlammable || v.isDelicate) && destination == "Africa" {\n\t\t\treturn "Denied!"\n\t\t}\n\t\treturn "Granted!"\n\tcase container:\n\t\tif (v.isFlammable && v.isDelicate) && destination == "Africa" {\n\t\t\treturn "Denied!"\n\t\t}\n\t\treturn "Granted"\n\tdefault:\n\t\treturn "Unknown Detected"\n\t}\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-sample-main",children:"\u2705 Sample Main"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func main() {\n\trandomDM := directMessage{"robin", "wassup", 22, false}\n\tuser, priority := processNotification(randomDM)\n\tfmt.Println(user, priority)\n\n\tif priority < 50 {\n\t\tfmt.Println("Seems like we are getting some spam today...")\n\t}\n\n\trandomContainer := container{"america", "2812 pounds", true, false, 31331.0}\n\tfmt.Println(randomContainer.manifest())\n\tfmt.Println(send(randomContainer, "Africa"))\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-summary",children:"\u2705 Summary"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"interfaces-are-implicitly-implemented",children:"Interfaces are implicitly implemented"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"use-type-switches-to-extract-underlying-types",children:"Use type switches to extract underlying types"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"keep-interfaces-small-and-focused",children:"Keep interfaces small and focused"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"use-clear-method-signatures",children:"Use clear method signatures"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.h3,{id:"interfaces-are-about-behavior-not-structure",children:"Interfaces are about behavior, not structure"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);