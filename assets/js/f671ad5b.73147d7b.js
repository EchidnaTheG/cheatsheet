"use strict";(self.webpackChunkmy_cheatsheet=self.webpackChunkmy_cheatsheet||[]).push([[442],{2663:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"functions-and-flow","title":"Functions and Control Flow in Go","description":"---","source":"@site/docs/functions-and-flow.md","sourceDirName":".","slug":"/functions-and-flow","permalink":"/cheatsheet/docs/functions-and-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/functions-and-flow.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interfaces-In-Go","permalink":"/cheatsheet/docs/Interfaces-In-Go"},"next":{"title":"Welcome to the Cheatsheet!","permalink":"/cheatsheet/docs/intro"}}');var r=t(4848),s=t(8453);const l={},o="Functions and Control Flow in Go",c={},a=[{value:"\ud83e\udde0 Go Is Block Scoped",id:"-go-is-block-scoped",level:2},{value:"\ud83d\udd39 Logging Function",id:"-logging-function",level:2},{value:"\ud83d\udd01 Request Function with Conditional Logic",id:"-request-function-with-conditional-logic",level:2},{value:"Early Return Style",id:"early-return-style",level:2},{value:"\ud83e\udde9 First-Class Functions",id:"-first-class-functions",level:2},{value:"\ud83d\udd01 Returning Multiple Values",id:"-returning-multiple-values",level:2},{value:"\ud83d\udd59 defer Keyword",id:"-defer-keyword",level:2},{value:"\ud83d\udd12 Closures",id:"-closures",level:2},{value:"\ud83e\udde0 Currying / Partial Application",id:"-currying--partial-application",level:2},{value:"\ud83e\uddea Main Function",id:"-main-function",level:2},{value:"Prefer early returns",id:"prefer-early-returns",level:2},{value:"defer is useful for cleanup",id:"defer-is-useful-for-cleanup",level:2},{value:"Functions are first-class in Go",id:"functions-are-first-class-in-go",level:2},{value:"Support for closures and partial application",id:"support-for-closures-and-partial-application",level:2}];function u(n){const e={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"functions-and-control-flow-in-go",children:"Functions and Control Flow in Go"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-go-is-block-scoped",children:"\ud83e\udde0 Go Is Block Scoped"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["Go is ",(0,r.jsx)(e.strong,{children:"block scoped"}),", not function scoped.",(0,r.jsx)(e.br,{}),"\n","Blocks are created by ",(0,r.jsx)(e.code,{children:"{}"})," \u2014 including ",(0,r.jsx)(e.code,{children:"main"}),", loops, if-statements, etc."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"-logging-function",children:"\ud83d\udd39 Logging Function"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'func Logger(fname, lname, registerDate, planType string, isOnUpgradeList bool, numOfDevices, numOfRelatives int) string {\n\tlogMessage := fmt.Sprintf(\n\t\t"\\n Name: %v %v\\n Date Registered: %v\\n Subscription Type: %v\\n OnUpgradeList: %v\\n Number of Devices: %v\\n Number of Relatives: %v\\n",\n\t\tfname, lname, registerDate, planType, isOnUpgradeList, numOfDevices, numOfRelatives)\n\treturn logMessage\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"-request-function-with-conditional-logic",children:"\ud83d\udd01 Request Function with Conditional Logic"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'func Request(httpCode int, serverNode string) int {\n\tif httpCode == 200 && serverNode != "" {\n\t\treturn 0\n\t} else {\n\t\treturn 1\n\t}\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"early-return-style",children:"Early Return Style"}),"\n",(0,r.jsx)(e.p,{children:"Go uses early returns instead of nested conditions:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:"func example(x, y int) int {\n\tif x == 1 && y == 0 {\n\t\treturn 10\n\t}\n\t// More checks here...\n\treturn 0\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-first-class-functions",children:"\ud83e\udde9 First-Class Functions"}),"\n",(0,r.jsx)(e.p,{children:"You can pass functions as arguments:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:"func applyAddFunction(sum func(x int) int, number int) int {\n\treturn sum(number)\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-returning-multiple-values",children:"\ud83d\udd01 Returning Multiple Values"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:"func triple(x, y, z int) (int, int, int) {\n\tx *= 3\n\ty *= 3\n\tz *= 3\n\treturn x, y, z\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-defer-keyword",children:"\ud83d\udd59 defer Keyword"}),"\n",(0,r.jsx)(e.p,{children:"Use defer to delay execution until the end of the function:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'func write_to_db() {\n\tdefer fmt.Println("DB CLOSED") // Will be done once the function is over, returns something etc, \n\tfmt.Println("Writing to DB...")\n\t// ... repeat\n\tfmt.Println("DB OPERATION DONE!") \n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"Multiple defer calls are stacked, last-in-first-out."}),"\n",(0,r.jsx)(e.h2,{id:"-closures",children:"\ud83d\udd12 Closures"}),"\n",(0,r.jsx)(e.p,{children:"A closure is a function that remembers variables from its enclosing scope:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:"func adder() func(int) int {\n\tsum := 0\n\treturn func(num int) int {\n\t\tsum += num\n\t\treturn sum\n\t}\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-currying--partial-application",children:"\ud83e\udde0 Currying / Partial Application"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:"func selfMath(mathFunc func(int, int) int) func(int) int {\n\treturn func(x int) int {\n\t\treturn mathFunc(x, x)\n\t}\n}\n\nfunc multiply(x, y int) int {\n\treturn x * y\n}\n\nfunc add(x, y int) int {\n\treturn x + y\n}\n\nfunc MATTH() {\n\tsquareFunc := selfMath(multiply)\n\tdoubleFunc := selfMath(add)\n\n\tfmt.Println(squareFunc(5)) // 25\n\tfmt.Println(doubleFunc(5)) // 10\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-main-function",children:"\ud83e\uddea Main Function"}),"\n",(0,r.jsx)(e.p,{children:"Sample usage and testing:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'func main() {\n\tRESPONSEVALUE := Request(2010, "America: Miami")\n\n\tswitch RESPONSEVALUE {\n\tcase 0:\n\t\tfmt.Println(Logger("John", "Doe", "3/21/2023", "Deluxe", false, 6, 2))\n\tcase 1:\n\t\tfmt.Println("NO DATA FOUND")\n\t}\n\n\tfmt.Println(triple(42, 12, 11))\n\n\ttest1, test2, _ := triple(31, 32, 24323421)\n\tprintln(test1, test2)\n\n\tfmt.Println(applyAddFunction(func(x int) int {\n\t\treturn x + x\n\t}, 2))\n\n\twrite_to_db()\n\n\tmyPerson := person{}\n\tmyPerson.name = "Mike"\n\tfmt.Println(myPerson)\n}\n'})}),"\n",(0,r.jsx)(e.h1,{id:"-summary",children:"\ud83c\udfc1 Summary"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.h2,{id:"prefer-early-returns",children:"Prefer early returns"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.h2,{id:"defer-is-useful-for-cleanup",children:"defer is useful for cleanup"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.h2,{id:"functions-are-first-class-in-go",children:"Functions are first-class in Go"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.h2,{id:"support-for-closures-and-partial-application",children:"Support for closures and partial application"}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function l(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);